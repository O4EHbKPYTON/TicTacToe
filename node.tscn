[gd_scene load_steps=12 format=3 uid="uid://dms825umkk5fg"]

[ext_resource type="Script" uid="uid://eajprkg16yhu" path="res://Control.gd" id="1_sy5k4"]
[ext_resource type="Script" uid="uid://cv47rmaqn0mgm" path="res://right_formula_v_box.gd" id="2_j2q8x"]

[sub_resource type="GDScript" id="GDScript_j2q8x"]
script/source = "extends Node3D

@onready var bloch_sphere: Node3D = %BlochSphere
@onready var state_vector: Node3D = %StateVector
@onready var camera: Camera3D = %Camera3D
@onready var tween: Tween

# Добавим константы для позиционирования
const SPHERE_RADIUS := 2.0
const AXIS_LENGTH := 3.0
const ARROW_LENGTH := 1.5

var current_theta: float = 0.0
var is_dragging: bool = false
var last_mouse_pos: Vector2

func _ready():
	setup_sphere()
	setup_axes()
	setup_state_vector()
	update_bloch_sphere(Vector3(0, 0, 1))

func setup_sphere():
	# Центрируем сферу
	%SphereMesh.position = Vector3.ZERO
	%SphereMesh.mesh.radius = SPHERE_RADIUS
	%SphereMesh.mesh.height = SPHERE_RADIUS * 2

func setup_axes():
	var axis_length = SPHERE_RADIUS * 1.5
	var axis_radius = 0.03
	var arrow_tip_length = 0.2

	# Передаем явные смещения для подписей
	_create_axis(%XAxis, Color.RED, 
		Vector3(axis_length/2, 0, 0),
		Vector3(0, 0, deg_to_rad(-90)),
		Vector3(axis_length/2 + 0.5, 0, 0),  # X смещение
		\"X\")  # Явно передаем текст

	_create_axis(%YAxis, Color.GREEN,
		Vector3(0, 0, axis_length/2),
		Vector3(deg_to_rad(90), 0, 0),
		Vector3(0, 0, axis_length/2 + 0.5),  # Y смещение
		\"Y\")

	_create_axis(%ZAxis, Color.BLUE,
		Vector3(0, axis_length/2, 0),
		Vector3.ZERO,
		Vector3(0, axis_length/2 + 0.5, 0),  # Z смещение
		\"Z\")

func _create_axis(
	axis_node: MeshInstance3D, 
	color: Color, 
	position: Vector3, 
	rotation: Vector3, 
	label_pos: Vector3,
	label_text: String  # Новый параметр для текста
):
	var axis_length = SPHERE_RADIUS * 1.5
	var axis_radius = 0.03
	var arrow_tip_length = 0.2
	
	# Основная ось (остается без изменений)
	axis_node.mesh = CylinderMesh.new()
	axis_node.mesh.height = axis_length
	axis_node.mesh.top_radius = axis_radius
	axis_node.mesh.bottom_radius = axis_radius
	axis_node.position = position
	axis_node.rotation = rotation
	
	# Наконечник стрелки (остается без изменений)
	var arrow_tip = MeshInstance3D.new()
	arrow_tip.mesh = CylinderMesh.new()
	arrow_tip.mesh.height = arrow_tip_length
	arrow_tip.mesh.top_radius = 0.01
	arrow_tip.mesh.bottom_radius = axis_radius * 2
	arrow_tip.position = Vector3(0, axis_length/2 + arrow_tip_length/2, 0)
	axis_node.add_child(arrow_tip)
	
	# Подпись оси (исправленная часть)
	var label = Label3D.new()
	label.text = label_text  # Используем явно переданный текст
	label.font_size = 40
	label.position = Vector3(0, axis_length/2 + arrow_tip_length/2 + 0.3, 0)
	label.billboard = true  # Делаем текст всегда обращенным к камере
	axis_node.add_child(label)
	
	# Материал (без изменений)
	var mat = StandardMaterial3D.new()
	mat.emission_enabled = true
	mat.emission = color
	axis_node.material_override = mat
	arrow_tip.material_override = mat

func setup_state_vector():
	var arrow_length = SPHERE_RADIUS * 0.75
	
	# Основной стержень
	%ArrowCylinder.mesh = CylinderMesh.new()
	%ArrowCylinder.mesh.height = arrow_length
	%ArrowCylinder.mesh.top_radius = 0.02
	%ArrowCylinder.mesh.bottom_radius = 0.05
	%ArrowCylinder.position = Vector3(0, 0,  -SPHERE_RADIUS*0.62)
	%ArrowCylinder.rotation.x = deg_to_rad(90)
	
	# Наконечник
	%ArrowCone.mesh = CylinderMesh.new()
	%ArrowCone.mesh.height = 0.15
	%ArrowCone.mesh.top_radius = 0.01
	%ArrowCone.mesh.bottom_radius = 0.07
	%ArrowCone.position = Vector3(0, 0, -SPHERE_RADIUS*0.5)
	%ArrowCone.rotation.x = deg_to_rad(90)
	
	# Материал
	var arrow_mat = StandardMaterial3D.new()
	arrow_mat.albedo_color = Color.ORANGE
	arrow_mat.emission_enabled = true
	arrow_mat.emission = Color.ORANGE * 0.8
	
	%ArrowCylinder.material_override = arrow_mat
	%ArrowCone.material_override = arrow_mat
	

func update_bloch_sphere(state: Vector3):
	var normalized_state = state.normalized()
	current_theta = acos(normalized_state.z)
	var current_phi = atan2(normalized_state.y, normalized_state.x)
	
	# Плавное обновление позиции и вращения
	tween = create_tween().set_trans(Tween.TRANS_CUBIC).set_ease(Tween.EASE_OUT)
	tween.parallel().tween_property(state_vector, \"position\", normalized_state * SPHERE_RADIUS, 0.8)
	tween.parallel().tween_property(state_vector, \"rotation\", 
		Vector3(current_theta, current_phi, 0), 0.8)


func _input(event):
	if event is InputEventMouseButton:
		if event.button_index == MOUSE_BUTTON_LEFT:
			is_dragging = event.pressed
			last_mouse_pos = event.position
			
	if event is InputEventMouseMotion and is_dragging:
		var delta = event.position - last_mouse_pos
		# Вращаем саму сферу Блоха
		bloch_sphere.rotate_y(delta.x * 0.01)
		bloch_sphere.rotate_x(delta.y * 0.01)
		bloch_sphere.rotation.x = clamp(bloch_sphere.rotation.x, -PI/2, PI/2)
		last_mouse_pos = event.position

func apply_x_gate(power: float):
	var new_theta = current_theta + PI * power
	var new_state = Vector3(
		sin(new_theta) * cos(0),
		sin(new_theta) * sin(0),
		cos(new_theta)
	)
	update_bloch_sphere(new_state)

func collapse_state():
	var collapse_to = Vector3(0, 0, 1) if randf() < 0.5 else Vector3(0, 0, -1)
	update_bloch_sphere(collapse_to)

func _on_TutorialStep_changed(step: Dictionary):
	match step[\"bloch_state\"]:
		\"superposition\":
			update_bloch_sphere(Vector3(1, 0, 0))
		\"x\":
			apply_x_gate(1.0)
		\"measurement\":
			collapse_state()
		\"o\":
			update_bloch_sphere(Vector3(0, 0, -1))
"

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_e2u21"]
shading_mode = 0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_bss38"]

[sub_resource type="SphereMesh" id="SphereMesh_tda05"]
radius = 2.0
height = 4.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_qn3nj"]
emission_enabled = true
emission = Color(0.937255, 0.286275, 0, 1)

[sub_resource type="CylinderMesh" id="CylinderMesh_l6pdb"]
material = SubResource("StandardMaterial3D_qn3nj")
top_radius = 0.05
bottom_radius = 0.05
height = 1.5

[sub_resource type="CylinderMesh" id="CylinderMesh_r657h"]
top_radius = 0.01
bottom_radius = 0.1
height = 0.3

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_f0urt"]
emission_enabled = true
emission = Color(0, 0, 1, 1)

[sub_resource type="CylinderMesh" id="CylinderMesh_jfkdj"]
material = SubResource("StandardMaterial3D_f0urt")
top_radius = 0.03
bottom_radius = 0.03
height = 4.0

[node name="QuantumTicTacToe" type="Control"]
custom_minimum_size = Vector2(2382, 1190)
layout_mode = 3
anchor_left = 0.5
anchor_top = 0.29
anchor_right = 0.5
anchor_bottom = 0.29
offset_left = -589.0
offset_top = -178.92
offset_right = 3411.0
offset_bottom = 3821.08
script = ExtResource("1_sy5k4")

[node name="ColorRect" type="ColorRect" parent="."]
layout_mode = 0
offset_right = 2382.0
offset_bottom = 1190.0

[node name="MainHBox" type="HBoxContainer" parent="ColorRect"]
unique_name_in_owner = true
layout_mode = 1
offset_right = 2028.0
offset_bottom = 1262.0
scale = Vector2(0.94341, 0.907901)

[node name="LeftGameVBox" type="VBoxContainer" parent="ColorRect/MainHBox"]
unique_name_in_owner = true
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0

[node name="InfoLabel" type="Label" parent="ColorRect/MainHBox/LeftGameVBox"]
unique_name_in_owner = true
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 24
text = "Выберите квантовую неопределённость для X и O"
horizontal_alignment = 1
vertical_alignment = 1

[node name="ControlPanel" type="HBoxContainer" parent="ColorRect/MainHBox/LeftGameVBox"]
layout_mode = 2
size_flags_horizontal = 4

[node name="ButtonPanel" type="HBoxContainer" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel"]
custom_minimum_size = Vector2(150, 100)
layout_mode = 2

[node name="StartButton" type="Button" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel/ButtonPanel"]
unique_name_in_owner = true
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Старт"

[node name="ResetButton" type="Button" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel/ButtonPanel"]
unique_name_in_owner = true
custom_minimum_size = Vector2(100, 0)
layout_mode = 2
theme_override_font_sizes/font_size = 24
text = "Сброс"

[node name="QuantumPanel" type="VBoxContainer" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel"]
layout_mode = 2

[node name="XLabel" type="Label" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel/QuantumPanel"]
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 24
text = "Квантовая неопределённость ×"

[node name="XSlider" type="HSlider" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel/QuantumPanel"]
unique_name_in_owner = true
custom_minimum_size = Vector2(0, 30)
layout_mode = 2
max_value = 1.0
step = 0.1

[node name="OLabel" type="Label" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel/QuantumPanel"]
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
theme_override_font_sizes/font_size = 24
text = "Квантовая неопределённость o"

[node name="OSlider" type="HSlider" parent="ColorRect/MainHBox/LeftGameVBox/ControlPanel/QuantumPanel"]
unique_name_in_owner = true
custom_minimum_size = Vector2(0, 30)
layout_mode = 2
max_value = 1.0
step = 0.1

[node name="GameGrid" type="GridContainer" parent="ColorRect/MainHBox/LeftGameVBox"]
unique_name_in_owner = true
layout_mode = 2
theme_override_constants/h_separation = 10
theme_override_constants/v_separation = 10
columns = 3

[node name="RightFormulaVBox" type="VBoxContainer" parent="ColorRect/MainHBox"]
unique_name_in_owner = true
custom_minimum_size = Vector2(600, 600)
layout_mode = 2
theme_override_constants/separation = 20
script = ExtResource("2_j2q8x")

[node name="TutorialText" type="RichTextLabel" parent="ColorRect/MainHBox/RightFormulaVBox"]
unique_name_in_owner = true
custom_minimum_size = Vector2(600, 100)
layout_mode = 2
size_flags_vertical = 3
theme_override_colors/table_border = Color(0, 0, 0, 1)
theme_override_colors/font_selected_color = Color(1, 1, 1, 1)
theme_override_font_sizes/normal_font_size = 24
bbcode_enabled = true
fit_content = true
scroll_following = true

[node name="FormulaPlaceholder" type="TextureRect" parent="ColorRect/MainHBox/RightFormulaVBox"]
unique_name_in_owner = true
custom_minimum_size = Vector2(500, 200)
layout_mode = 2
stretch_mode = 5

[node name="NextStepButton" type="Button" parent="ColorRect/MainHBox/RightFormulaVBox"]
unique_name_in_owner = true
z_index = 100
custom_minimum_size = Vector2(100, 50)
layout_mode = 2
size_flags_horizontal = 4
size_flags_vertical = 8
text = "Далее →"
vertical_icon_alignment = 0

[node name="Bloch3DContainer" type="SubViewportContainer" parent="ColorRect"]
visible = false
custom_minimum_size = Vector2(800, 400)
layout_mode = 2
offset_left = 582.084
offset_right = 1382.08
offset_bottom = 1262.0
focus_mode = 2
stretch = true

[node name="SubViewport" type="SubViewport" parent="ColorRect/Bloch3DContainer"]
handle_input_locally = false
msaa_2d = 2
msaa_3d = 2
size = Vector2i(800, 1262)
render_target_update_mode = 0

[node name="Bloch3DScene" type="Node3D" parent="ColorRect/Bloch3DContainer/SubViewport"]

[node name="Camera3D" type="Camera3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene"]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 0.866025, 0.5, 0, -0.5, 0.866025, 0, 2, 5)

[node name="DirectionalLight3D" type="DirectionalLight3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene"]
light_energy = 2.0

[node name="BlochSphere" type="Node3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene"]
unique_name_in_owner = true
script = SubResource("GDScript_j2q8x")

[node name="SphereMesh" type="MeshInstance3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere"]
unique_name_in_owner = true
material_override = SubResource("StandardMaterial3D_e2u21")
material_overlay = SubResource("StandardMaterial3D_bss38")
transparency = 0.95
mesh = SubResource("SphereMesh_tda05")

[node name="StateVector" type="Node3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere"]
unique_name_in_owner = true

[node name="ArrowCylinder" type="MeshInstance3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere/StateVector"]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.7, 0)
mesh = SubResource("CylinderMesh_l6pdb")

[node name="ArrowCone" type="MeshInstance3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere/StateVector"]
unique_name_in_owner = true
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.5, 0)
mesh = SubResource("CylinderMesh_r657h")

[node name="Axes" type="Node3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere"]

[node name="XAxis" type="MeshInstance3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere/Axes"]
unique_name_in_owner = true
mesh = SubResource("CylinderMesh_jfkdj")

[node name="YAxis" type="MeshInstance3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere/Axes"]
unique_name_in_owner = true
mesh = SubResource("CylinderMesh_jfkdj")

[node name="ZAxis" type="MeshInstance3D" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/BlochSphere/Axes"]
unique_name_in_owner = true
mesh = SubResource("CylinderMesh_jfkdj")

[node name="RotationController" type="Node" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene"]

[node name="InputController" type="Node" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene/RotationController"]

[node name="TweenManager" type="Node" parent="ColorRect/Bloch3DContainer/SubViewport/Bloch3DScene"]
